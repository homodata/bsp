R version 4.0.2 (2020-06-22) -- "Taking Off Again"Copyright (C) 2020 The R Foundation for Statistical ComputingPlatform: x86_64-apple-darwin17.0 (64-bit)R is free software and comes with ABSOLUTELY NO WARRANTY.You are welcome to redistribute it under certain conditions.Type 'license()' or 'licence()' for distribution details.  Natural language support but running in an English localeR is a collaborative project with many contributors.Type 'contributors()' for more information and'citation()' on how to cite R or R packages in publications.Type 'demo()' for some demos, 'help()' for on-line help, or'help.start()' for an HTML browser interface to help.Type 'q()' to quit R.> ## load package libraries> library(tidyverse)Registered S3 methods overwritten by 'dbplyr':  method         from  print.tbl_lazy       print.tbl_sql      ── Attaching packages ───────────────────────── tidyverse 1.3.1 ──✓ ggplot2 3.3.5     ✓ purrr   0.3.4✓ tibble  3.1.0     ✓ dplyr   1.0.7✓ tidyr   1.1.3     ✓ stringr 1.4.0✓ readr   1.4.0     ✓ forcats 0.5.1── Conflicts ──────────────────────────── tidyverse_conflicts() ──x dplyr::filter() masks stats::filter()x dplyr::lag()    masks stats::lag()> library(stringr)> library(zoo)Attaching package: ‘zoo’The following objects are masked from ‘package:base’:    as.Date, as.Date.numeric> library(here)here() starts at /Users/lelysbravo/github/bsp> library(ohicore)> > ## select scenario year for the assessment> scenario_years <- 2020> > ## set the working directory to a filepath we all have> setwd(here::here('region2020'))> ## load scenario configuration> conf <- ohicore::Conf('conf')> > ## check that scenario layers files in the \layers folder match layers.csv registration. Layers files are not modified.> ohicore::CheckLayers('layers.csv', 'layers', flds_id=conf$config$layers_id_fields, verbose=FALSE)Unused fields...    ico_spp_iucn_status: iucn_sid,eval_yr    mar_harvest_tonnes: taxa_group,family    uninhabited: southern_island,est_populationLayers missing data, ie all NA ...    element_wts_cp_km2_x_protection: element_wts_cp_km2_x_protection_gl2018.csv    element_wts_cs_km2_x_storage: element_wts_cs_km2_x_storage_gl2018.csv> > ## load scenario layers for ohicore to access. Layers files are not modified.> layers <- ohicore::Layers('layers.csv', 'layers')Layer element_wts_cp_km2_x_protection has no rows of data.Layer element_wts_cs_km2_x_storage has no rows of data.> layers$data$scenario_year <- scenario_years> ## calculate scenario scores> scores <- ohicore::CalculateAll(conf, layers)Calculating Status and Trend for each region for FIS...NAs introduced by coercionCalculating Status and Trend for each region for MAR...Calculating Status and Trend for each region for AO...Calculating Status and Trend for each region for NP...Joining, by = c("year", "region_id", "product")Calculating Status and Trend for each region for CS...Calculating Status and Trend for each region for CP...Calculating Status and Trend for each region for TR...Calculating Status and Trend for each region for LIV...Calculating Status and Trend for each region for ECO...Calculating Status and Trend for each region for ICO...Calculating Status and Trend for each region for LSP...Calculating Status and Trend for each region for CW...Calculating Status and Trend for each region for HAB...Some regions/habitats have extent data, but no trend data.  Consider estimating these values.Calculating Status and Trend for each region for SPP...Calculating Pressures for each region...There are 6 pressures subcategories: pollution, alien_species, habitat_destruction, fishing_pressure, climate_change, social These goal-elements are in the weighting data layers, but not included in the pressure_matrix.csv:CP-seagrass, CP-coral, CS-seagrass, HAB-seagrass, HAB-coral, LIV-mar, ECO-marThese goal-elements are in the pressure_matrix.csv, but not included in the weighting data layers:CP-mangrove, CP-saltmarsh, CS-mangrove, CS-saltmarsh, HAB-mangrove, HAB-saltmarsh, HAB-soft_bottomCalculating Resilience for each region...There are 7 Resilience subcategories: ecological, alien_species, goal, fishing_pressure, habitat_destruction, pollution, social These goal-elements are in the weighting data layers, but not included in the resilience_matrix.csv:CP-seagrass, CS-seagrass, HAB-seagrassThese goal-elements are in the resilience_matrix.csv, but not included in the weighting data layers:HAB-soft_bottom, NP-corals, CP-mangrove, CS-mangrove, HAB-mangrove, NP-shells, NP-spongesCalculating Goal Score and Likely Future for each region for FIS...Calculating Goal Score and Likely Future for each region for MAR...Calculating Goal Score and Likely Future for each region for AO...Calculating Goal Score and Likely Future for each region for NP...Calculating Goal Score and Likely Future for each region for CS...  missing pressures dimension, assigning NA!  missing resilience dimension, assigning NA!no non-missing arguments to min; returning Infno non-missing arguments to max; returning -Infno non-missing arguments to min; returning Infno non-missing arguments to max; returning -InfCalculating Goal Score and Likely Future for each region for CP...  missing pressures dimension, assigning NA!no non-missing arguments to min; returning Infno non-missing arguments to max; returning -InfCalculating Goal Score and Likely Future for each region for TR...Calculating Goal Score and Likely Future for each region for LIV...Calculating Goal Score and Likely Future for each region for ECO...Calculating Goal Score and Likely Future for each region for ICO...Calculating Goal Score and Likely Future for each region for LSP...Calculating Goal Score and Likely Future for each region for CW...Calculating Goal Score and Likely Future for each region for HAB...  missing pressures dimension, assigning NA!no non-missing arguments to min; returning Infno non-missing arguments to max; returning -InfCalculating Goal Score and Likely Future for each region for SPP...Calculating post-Index function for each region for FP...Calculating post-Index function for each region for LE...Calculating post-Index function for each region for SP...Calculating post-Index function for each region for BD...Calculating Index Score for each region using goal weights to combine goal scores...Calculating Index Likely Future State for each region...Calculating Post-process PreGlobalScores() function for each region...Calculating scores for ASSESSMENT AREA (region_id=0) by area weighting...Calculating FinalizeScores function...> > ## save scores as scores.csv> readr::write_csv(scores, 'scores.csv', na='')> ## source script (to be incorporated into ohicore)> source('https://raw.githubusercontent.com/OHI-Science/arc/master/circle2016/plot_flower_local.R')> > PlotFlower(assessment_name = "Bahia de Sechura (Peru)",+ dir_fig_save    = "reports/figures")── Column specification ──────────────────────────────────────────cols(  order_color = col_double(),  order_hierarchy = col_double(),  order_calculate = col_double(),  goal = col_character(),  parent = col_character(),  name = col_character(),  name_flower = col_character(),  description = col_character(),  weight = col_double(),  preindex_function = col_character(),  postindex_function = col_character())Using layers/fp_wildcaught_weight_gl2020.csv to plot FIS and MAR with unequal weighting── Column specification ──────────────────────────────────────────cols(  rgn_id = col_double(),  year = col_double(),  w_fis = col_double())`data_frame()` was deprecated in tibble 1.1.0.Please use `tibble()` instead.── Column specification ──────────────────────────────────────────cols(  rgn_id = col_double(),  rgn_name = col_character(),  area_km2 = col_double())